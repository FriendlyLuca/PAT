
/*1018. 锤子剪刀布 (20)
时间限制 
100 ms
内存限制 
65536 kB
代码长度限制 
8000 B
判题程序 
Standard 
作者 
CHEN, Yue
大家应该都会玩“锤子剪刀布”的游戏：两人同时给出手势，胜负规则如图所示：

现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。 
输入格式： 
输入第1行给出正整数N（<=105），即双方交锋的次数。随后N行，每行给出一次交锋的信息，即甲、乙双方同时给出的的手势。C代表“锤子”、J代表“剪刀”、B代表“布”，第1个字母代表甲方，第2个代表乙方，中间有1个空格。 
输出格式： 
输出第1、2行分别给出甲、乙的胜、平、负次数，数字间以1个空格分隔。第3行给出两个字母，分别代表甲、乙获胜次数最多的手势，中间有1个空格。如果解不唯一，则输出按字母序最小的解。 
输入样例：
10
C J
J B
C B
B B
B C
C C
C B
J B
B C
J J
输出样例：
5 3 2
2 3 5
B B

提交代码 


*/

#include<stdio.h>
int main(){
	struct ju{
		char jia;
		char yi;
	}a[100001];
	int b[6]={0};//分别代表甲BJC与乙BJC赢的次数
	int num;
	scanf("%d",&num);
	for (int i=0;i<num;i++){
		getchar();//用来吞掉多余的空格，完全不懂是怎么一回事。。。
		scanf("%c %c",&a[i].jia,&a[i].yi);
		if (a[i].jia=='B'){
			if (a[i].yi=='J')
				b[4]++;
			if (a[i].yi=='C')
				b[0]++;
		}
		if (a[i].jia=='J'){
			if (a[i].yi=='B')
				b[1]++;
			if (a[i].yi=='C')
				b[5]++;
		}
		if (a[i].jia=='C'){
			if (a[i].yi=='J')
				b[2]++;
			if (a[i].yi=='B')
				b[3]++;
		}
		
	}
	printf("%d %d %d\n",b[0]+b[1]+b[2],num-(b[0]+b[1]+b[2]+b[3]+b[4]+b[5]),b[3]+b[4]+b[5]);
	printf("%d %d %d\n",b[3]+b[4]+b[5],num-(b[0]+b[1]+b[2]+b[3]+b[4]+b[5]),b[0]+b[1]+b[2]);
	if (b[0]>=b[2]){
		if (b[0]>=b[1])
			printf("B");
		else
			printf("J");
	}
	else{
		if (b[2]>=b[1])
			printf("C");
		else
			printf("B");
	}
	if (b[3]>=b[5]){
		if (b[3]>=b[4])
			printf(" B");
		else
			printf(" J");
	}
	else{
		if (b[5]>=b[4])
			printf(" C");
		else
			printf(" B");
	}
	
}
//发现当B,J,C获胜的次数一样时，最多的手势的优先级是按照BJC来的！！！
#include<stdio.h>
int main(){
	int n;
	scanf("%d",&n);
	char j,y;
	int a[6]={0};//前3个数记录胜平负，后三个数记录每种手势赢的次数
	int b[6]={0};
	for(int i=0;i<n;i++){
		getchar();
		scanf("%c %c",&j,&y);
		if (j==y){
			a[1]++;
			b[1]++;
		}else if (j=='B'){
			if (y=='C'){
				a[0]++;
				a[3]++;
				b[2]++;
			}else{
				a[2]++;
				b[0]++;
				b[4]++;
			}
		}else if (j=='J'){
			if (y=='B'){
				a[0]++;
				a[4]++;
				b[2]++;
			}else{
				a[2]++;
				b[0]++;
				b[5]++;
			}
		}else if (j=='C'){
			if (y=='B'){
				a[2]++;
				b[0]++;
				b[3]++;
			}else{
				a[0]++;
				a[5]++;
				b[2]++;
			}
		}
	}
	printf("%d %d %d\n%d %d %d\n",a[0],a[1],a[2],b[0],b[1],b[2]);
	if(a[3]>=a[4]){
		if (a[3]>=a[5])
			printf("B ");
		else
			printf("C ");
	}else{
		if (a[4]>a[5])
			printf("J ");
		else
			printf("C ");
	}
	if(b[3]>=b[4]){
		if (b[3]>=b[5])
			printf("B");
		else
			printf("C");
	}else{
		if (b[4]>b[5])
			printf("J");
		else
			printf("C");
	}
	return 0;
}
