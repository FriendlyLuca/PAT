/*1021. 个位数统计 (15)

时间限制
100 ms
内存限制
65536 kB
代码长度限制
8000 B
判题程序
Standard
作者
CHEN, Yue
给定一个k位整数N = dk-1*10k-1 + ... + d1*101 + d0 (0<=di<=9, i=0,...,k-1, dk-1>0)，请编写程序统计每种不同的个位数字出现的次数。例如：给定N = 100311，则有2个0，3个1，和1个3。

输入格式：

每个输入包含1个测试用例，即一个不超过1000位的正整数N。

输出格式：

对N中每一种不同的个位数字，以D:M的格式在一行中输出该位数字D及其在N中出现的次数M。要求按D的升序输出。

输入样例：
100311
输出样例：
0:2
1:3
3:1
*/


#include<stdio.h>
int main()
{	
	int c;
	int n;
	int m;
	int a[10]={0,0,0,0,0,0,0,0,0,0};//这就是储存0到9这10个数字出现次数的数组
	while((c=getchar())!='\n')
	{	

		a[c-48]++;/*这里我一开始错了很久，直接写的是啊a[c]++，说明没弄明白getchar函数，它收到的是字符的ASCII码，0的ASCII码为48*/
	}
	for (n=0;n<10;n++)//这个是得出第一个次数不为0的最小位，在输出前不用转行,不过我试了下直接每项输出后面加\n也算对，不知道为什么
	{
		if (a[n])
		{
			printf("%d:%d",n,a[n]);
			m=n;
			break;
		}
	}
	for (n=m+1;n<10;n++)
	{
		if (a[n])
			printf("\n%d:%d",n,a[n]);
	}
	return 0;
}

//one year later

#include<iostream>
#include<string>
using namespace std;
int main(){
	int a[10]={0};
	string num;
	cin>>num;
	for (int i=0;i<num.length();i++){
		a[num[i]-'0']++;
	}
	for (int i=0;i<10;i++){
		if (a[i]!=0)
			printf("%d:%d\n",i,a[i]);
	}
	return 0;
}
