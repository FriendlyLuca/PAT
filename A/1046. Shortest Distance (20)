/*
1046. Shortest Distance (20)
时间限制 
100 ms
内存限制 
65536 kB
代码长度限制 
16000 B
判题程序 
Standard 
作者 
CHEN, Yue
The task is really simple: given N exits on a highway which forms a simple cycle, you are supposed to tell the shortest distance between any pair of exits.
Input Specification: 
Each input file contains one test case. For each case, the first line contains an integer N (in [3, 105]), followed by N integer distances D1 D2 ... DN, where Di is the distance between the i-th and the (i+1)-st exits, and DN is between the N-th and the 1st exits. All the numbers in a line are separated by a space. The second line gives a positive integer M (<=104), with M lines follow, each contains a pair of exit numbers, provided that the exits are numbered from 1 to N. It is guaranteed that the total round trip distance is no more than 107.
Output Specification: 
For each test case, print your results in M lines, each contains the shortest distance between the corresponding given pair of exits.
Sample Input:
5 1 2 4 14 9
3
1 3
2 5
4 1
Sample Output:
3
10
7

提交代码 
*/

#include<stdio.h>
int main(){
	int d[100001];
	int ans[10001];
	int n,m;
	int l[100001];//此处用来记录从第一个点到第n个点直接的距离，否则在后面放到循环里来计算时很容易超时
	scanf("%d",&n);
	for(int i=0;i<n;i++){
		scanf("%d",&d[i]);
		if (i==0)
			l[i]=d[i];
		else
			l[i]=d[i]+l[i-1];
	}
	scanf("%d",&m);
	for (int i=0;i<m;i++){
		int a,b;
		scanf("%d %d",&a,&b);
		if (b<a){
			a=a+b;
			b=a-b;
			a=a-b;
		}
		ans[i]=l[b-2]-l[a-2];
		if (ans[i]>l[n-1]/2)
			ans[i]=l[n-1]-ans[i];
		
	}
	for (int i=0;i<m;i++){
		printf("%d\n",ans[i]);
	}
	return 0;

}
