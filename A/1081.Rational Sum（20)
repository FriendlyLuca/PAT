/*
1081 Rational Sum（20 分）
Given N rational numbers in the form numerator/denominator, you are supposed to calculate their sum.
Input Specification:
Each input file contains one test case. Each case starts with a positive integer N (≤100), followed in the next line N rational numbers a1/b1 a2/b2 ... where all the numerators and denominators are in the range of long int. If there is a negative number, then the sign must appear in front of the numerator.
Output Specification:
For each test case, output the sum in the simplest form integer numerator/denominator where integer is the integer part of the sum, numerator < denominator, and the numerator and the denominator have no common factor. You must output only the fractional part if the integer part is 0.
Sample Input 1:
5
2/5 4/15 1/30 -2/60 8/3
Sample Output 1:
3 1/3
Sample Input 2:
2
4/3 2/3
Sample Output 2:
2
Sample Input 3:
3
1/3 -1/6 1/8
Sample Output 3:
7/24
*/

#include<cstdio>
int gcd(long long a,long long b){
	if (a<b){
		a=a+b;
		b=a-b;
		a=a-b;
	}
	if (b==0)
		return a;
	else
		return gcd(b,a%b);
}
struct fs{
	int fz;
	int fm;
}a[110];
int main(){
	int n;
	long long m=1,z=0;
	scanf("%d",&n);
	for (int i=0;i<n;i++){
		scanf("%d/%d",&a[i].fz,&a[i].fm);
		z=z*a[i].fm+m*a[i].fz;//每一步直接约分，不然结果会溢出，long long 也不够用
		m=m*a[i].fm;
		int g=gcd(m,z);
		m/=g;
		z/=g;
	}
	if (z<0){
		printf("-");
		z=-z;
	}
	if (z==0)
		printf("0\n");
	if (z>=m){
		printf("%lld",z/m);
		if(z%m)
			printf(" ");
		else
			printf("\n");
		z=z%m;
	}
	if (z){
		printf("%lld/%lld\n",z,m);
	}
	return 0;
}
