/*
1038 Recover the Smallest Number (30)（30 分）
Given a collection of number segments, you are supposed to recover the smallest number from them. For example, given {32, 321, 3214, 0229, 87}, we can recover many numbers such like 32-321-3214-0229-87 or 0229-32-87-321-3214 with respect to different orders of combinations of these segments, and the smallest number is 0229-321-3214-32-87.
Input Specification:
Each input file contains one test case. Each case gives a positive integer N (<=10000) followed by N number segments. Each segment contains a non-negative integer of no more than 8 digits. All the numbers in a line are separated by a space.
Output Specification:
For each test case, print the smallest number in one line. Do not output leading zeros.
Sample Input:
5 32 321 3214 0229 87
Sample Output:
22932132143287
*/

#include<string>
#include<iostream>
#include<algorithm>
using namespace std;
bool cmp(string a,string b){
	return a+b<b+a;
}
int main(){
	int n;
	cin>>n;
	string s[10010];
	for(int i=0;i<n;i++){
		cin>>s[i];
	}
	sort(s,s+n,cmp);
	string an=s[0];
	for (int i=1;i<n;i++){
		an+=s[i];
	}
	for (int i=0;i<an.size();i++){
		if (an[i]=='0'){
			an.erase(an.begin()+i);//这里千万别写成an.erase(i),会结果错误
			i--;
		}else
			break;
	}
	if (an.size()==0)
		cout<<"0";
	else
		cout<<an;
	return 0;
}
